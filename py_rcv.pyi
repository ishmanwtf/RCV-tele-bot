# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import typing
from enum import Enum, auto

class ValidateVoteResult:
    valid: bool
    error_message: str
    def to_tuple(self) -> tuple:
        ...


class VotesCounter:
    def __new__(cls,): ...
    def flush_votes(self) -> bool:
        ...

    def get_num_votes(self) -> int:
        ...

    @staticmethod
    def validate_raw_vote(rankings:typing.Sequence[int]) -> ValidateVoteResult:
        ...

    def insert_vote_ranking(self, vote_id:int, vote_ranking:int) -> None:
        ...

    def insert_empty_votes(self, num_votes:int) -> bool:
        ...

    def determine_winner(self) -> typing.Optional[int]:
        ...


class PySpecialVotes(Enum):
    WITHHOLD = auto()
    ABSTAIN = auto()

